   
default:
  default_args:
    owner: "BROC95"
    start_date: 2018-03-01
    # end_date: 2018-03-05
    retries: 1
    retry_delay_sec: 300
  concurrency: 1
  max_active_runs: 1
  dagrun_timeout_sec: 600
  default_view: "tree"
  orientation: "LR"
  schedule_interval: "@daily"
  # on_success_callback_name: print_hello
  # on_success_callback_file: /usr/local/airflow/dags/print_hello.py
  # on_failure_callback_name: print_hello
  # on_failure_callback_file: /usr/local/airflow/dags/print_hello.py

example_dag:
  default_args:
    owner: "custom_owner"
    start_date: 2 days
  description: "this is an example dag"
  schedule_interval: "0 3 * * *"
  tasks:
    task_1:
      operator: airflow.operators.bash.BashOperator
      bash_command: "echo 1"
    task_2:
      operator: airflow.operators.bash.BashOperator
      bash_command: "echo 2"
      dependencies: [task_1]
    # task_3:
    #   operator: airflow.operators.python.PythonOperator
    #   python_callable_name: main
    #   python_callable_file: /usr/local/airflow/dags/main.py
    #   dependencies: [task_1]

example_dag2:
  default_args:
    timezone: Europe/Amsterdam
  tasks:
    task_1:
      operator: airflow.operators.bash.BashOperator
      bash_command: "echo 1"
    task_2:
      operator: airflow.operators.bash.BashOperator
      bash_command: "echo 2"
      dependencies: [task_1]
    task_3:
      operator: airflow.operators.bash.BashOperator
      bash_command: "echo 3"
      dependencies: [task_1]

ETL_dag:
    tasks:
      
      # ETL:
      #   operator: airflow.operators.python.PythonOperator
      #   # operator: airflow.operators.bash.BashOperator
      #   # bash_command: 'ETL'
      #   python_callable_name: 'main'
      #   python_callable_file: /usr/local/airflow/dags/main.py

        # python_callable_name: 'hello'
        # python_callable_file: /usr/local/airflow/dags/hello.py
      Extract_B1:
        operator: airflow.operators.python.PythonOperator
      # bash_command: '/bin/bash -c "PYTHONPATH=. python python/procedure/coco.py"'
        python_callable_name: 'extract'
        python_callable_file: /usr/local/airflow/dags/GBUNComahue_dag_elt.py
        # bash_command: 'echo 2'
        # dependencies: [ETL]
      Transform_B1:
        operator: airflow.operators.python.PythonOperator
        python_callable_name: 'transform'
        python_callable_file: /usr/local/airflow/dags/GBUNComahue_dag_elt.py
        dependencies: [Extract_B1]
      Load_B1:
        operator: airflow.operators.python.PythonOperator
        python_callable_name: 'load'
        python_callable_file: /usr/local/airflow/dags/GBUNComahue_dag_elt.py
        dependencies: [Transform_B1]    
      Extract_B2:
        operator: airflow.operators.python.PythonOperator
        python_callable_name: 'extract'
        python_callable_file: /usr/local/airflow/dags/GBUNSalvador_dag_elt.py
        # dependencies: [ETL]
      Transform_B2:
        operator: airflow.operators.python.PythonOperator
        python_callable_name: 'extract'
        python_callable_file: /usr/local/airflow/dags/GBUNSalvador_dag_elt.py
        dependencies: [Extract_B2]
      Load_B2:
        operator: airflow.operators.python.PythonOperator
        python_callable_name: 'load'
        python_callable_file: /usr/local/airflow/dags/GBUNSalvador_dag_elt.py
        dependencies: [Transform_B2]


